version: '3.8'

services:
  # n8n - Container principal
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-admin123}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n_postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${N8N_DB_NAME:-n8n}
      - DB_POSTGRESDB_USER=${N8N_DB_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD:-n8n_password}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your-encryption-key-here}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-America/Sao_Paulo}
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      n8n_postgres:
        condition: service_healthy
    networks:
      - n8n_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL para n8n
  n8n_postgres:
    image: postgres:15-alpine
    container_name: n8n_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${N8N_DB_NAME:-n8n}
      - POSTGRES_USER=${N8N_DB_USER:-n8n}
      - POSTGRES_PASSWORD=${N8N_DB_PASSWORD:-n8n_password}
    volumes:
      - n8n_postgres_data:/var/lib/postgresql/data
    networks:
      - n8n_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${N8N_DB_USER:-n8n} -d ${N8N_DB_NAME:-n8n}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # PostgreSQL para dados da aplicação
  app_postgres:
    image: postgres:15-alpine
    container_name: app_postgres
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=${APP_DB_NAME:-app_db}
      - POSTGRES_USER=${APP_DB_USER:-app_user}
      - POSTGRES_PASSWORD=${APP_DB_PASSWORD:-app_password}
    volumes:
      - app_postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - n8n_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${APP_DB_USER:-app_user} -d ${APP_DB_NAME:-app_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  n8n_data:
    driver: local
  n8n_postgres_data:
    driver: local
  app_postgres_data:
    driver: local

networks:
  n8n_network:
    driver: bridge 